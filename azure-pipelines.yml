# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
  
pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'
  displayName: 'Use latest Python 3.10.x'
  
  # needed for manual testing, will re-enable and re write tests later
  #
  #
  # disabled for now
#- script: |
#    sudo apt update
#    sudo apt install ffmpeg
#  displayName: 'Install Ubuntu packages'

#- script: |
#    python -m pip install --upgrade pip
#    pip install -r requirements.txt
#  displayName: 'Install pip requirements'    

#- script: |
#    cp --recursive example-database database
#  displayName: 'Configure database'

# this has been disabled, automated testing got more complicated, this could be fixed later  
#- script: |
#    python main.py
#  displayName: 'Validate MP3 download function'


# Docker time
#- task: Docker@2
#  displayName: Login to ACR
#  inputs:
#    command: login
#    containerRegistry: musicregistry

# remove unneeded .gitkeep file from music directory
- task: DeleteFiles@1
  displayName: 'Remove unneeded .gitkeep file'
  inputs:
    contents: |
      /example-music/.gitkeep

# Login to the DockerHub
- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: DockerHubConnect

# Build and push the new image to the DockerHub
- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    dockerfile: Dockerfile
    repository: thijstakken/musicservice # username/Repository for DockerHub
    tags: |
      latest