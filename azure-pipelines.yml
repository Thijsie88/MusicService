# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
  
pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10.4'
  displayName: 'Use Python 3.10.4'

- script: |
    sudo apt update
    sudo apt install ffmpeg
  displayName: 'Install Ubuntu packages'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install pip requirements'    

- script: |
    cp --recursive example-database database
  displayName: 'Configure database'

- script: |
    python downloader.py
  displayName: 'Validate MP3 download function'


# Docker time
#- task: Docker@2
#  displayName: Login to ACR
#  inputs:
#    command: login
#    containerRegistry: musicregistry

- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: DockerHubConnect

- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    dockerfile: dockerfile
    repository: thijstakken/musicservice # username/contosoRepository for DockerHub
    tags: |
      latest